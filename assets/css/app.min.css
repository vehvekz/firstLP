* {
  margin: 0;
  padding: 0;
  font: inherit;
  box-sizing: border-box; }
  *:focus, *:active, *:hover {
    outline: none; }

ul, li {
  list-style: none; }

hr {
  box-sizing: content-box;
  height: 0; }

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
  -webkit-focus-ring-color: rgba(255, 255, 255, 0);
  cursor: default; }

body {
  font-size: 100%;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

a {
  background: transparent; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

button,
input {
  line-height: normal; }

button,
select {
  text-transform: none; }

button {
  overflow: visible; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

input,
select,
textarea {
  border-radius: 0;
  box-shadow: none; }

input,
textarea {
  resize: none;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text; }

[placeholder]:focus::-webkit-input-placeholder {
  color: transparent; }

[placeholder]:focus::-moz-placeholder {
  color: transparent; }

[placeholder]:focus:-ms-input-placeholder {
  color: transparent; }

[placeholder]:focus::placeholder {
  color: transparent; }

/*
* Scut, a collection of Sass utilities
* to ease and improve our implementations of common style-code patterns.
* v1.4.0
* Docs at http://davidtheclark.github.io/scut
*/
/*! Flickity v2.0.2
http://flickity.metafizzy.co
---------------------------------------------- */
.flickity-enabled {
  position: relative; }

.flickity-enabled:focus {
  outline: none; }

.flickity-viewport {
  overflow: hidden;
  position: relative;
  height: 100%; }

.flickity-slider {
  position: absolute;
  width: 100%;
  height: 100%; }

/* draggable */
.flickity-enabled.is-draggable {
  -webkit-tap-highlight-color: transparent;
  tap-highlight-color: transparent;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.flickity-enabled.is-draggable .flickity-viewport {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab; }

.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {
  cursor: -webkit-grabbing;
  cursor: grabbing; }

/* ---- previous/next buttons ---- */
.flickity-prev-next-button {
  position: absolute;
  top: 50%;
  width: 44px;
  height: 44px;
  border: none;
  border-radius: 50%;
  background: white;
  background: rgba(255, 255, 255, 0.75);
  cursor: pointer;
  /* vertically center */
  -ms-transform: translateY(-50%);
      transform: translateY(-50%); }

.flickity-prev-next-button:hover {
  background: white; }

.flickity-prev-next-button:focus {
  outline: none;
  box-shadow: 0 0 0 5px #09F; }

.flickity-prev-next-button:active {
  opacity: 0.6; }

.flickity-prev-next-button.previous {
  left: 10px; }

.flickity-prev-next-button.next {
  right: 10px; }

/* right to left */
.flickity-rtl .flickity-prev-next-button.previous {
  left: auto;
  right: 10px; }

.flickity-rtl .flickity-prev-next-button.next {
  right: auto;
  left: 10px; }

.flickity-prev-next-button:disabled {
  opacity: 0.3;
  cursor: auto; }

.flickity-prev-next-button svg {
  position: absolute;
  left: 20%;
  top: 20%;
  width: 60%;
  height: 60%; }

.flickity-prev-next-button .arrow {
  fill: #333; }

/* ---- page dots ---- */
.flickity-page-dots {
  position: absolute;
  width: 100%;
  bottom: -25px;
  padding: 0;
  margin: 0;
  list-style: none;
  text-align: center;
  line-height: 1; }

.flickity-rtl .flickity-page-dots {
  direction: rtl; }

.flickity-page-dots .dot {
  display: inline-block;
  width: 10px;
  height: 10px;
  margin: 0 8px;
  background: #333;
  border-radius: 50%;
  opacity: 0.25;
  cursor: pointer; }

.flickity-page-dots .dot.is-selected {
  opacity: 1; }

/**
 * SASS Burger menu
 * @include burger(25px, 3px, 5px, #222);
 */
/**
* Media queries
*/
.wrapper {
  font-weight: 400;
  font-family: "Lato", sans-serif;
  font-size: 16px;
  position: relative;
  min-width: 320px;
  margin: auto;
  color: #333333;
  padding-top: 6.0625em; }
  @media screen and (max-width: 991px) {
    .wrapper {
      font-size: 14px; } }
  @media screen and (max-width: 767px) {
    .wrapper {
      padding-top: 4.5em; } }
  @media screen and (max-width: 543px) {
    .wrapper {
      padding-top: 3.8em; } }

svg {
  font-size: 3rem;
  height: 1em;
  width: 1em;
  fill: inherit;
  stroke: inherit; }

a, a:hover, a:focus, a:visited {
  text-decoration: none;
  color: inherit;
  transition: all 0.3s; }

h2 {
  font-size: 2.25em; }

.container {
  max-width: 1170px;
  margin: 0 auto; }

.col-1-3 {
  display: inline-block;
  vertical-align: top;
  width: 33%;
  padding: 0 3em; }
  @media screen and (max-width: 991px) {
    .col-1-3 {
      width: 40%;
      padding-bottom: 2em; } }
  @media screen and (max-width: 767px) {
    .col-1-3 {
      width: 80%; } }
  @media screen and (max-width: 419px) {
    .col-1-3 {
      width: 100%; } }

.col-1-4 {
  width: 208px;
  padding-bottom: 2em;
  display: inline-block;
  vertical-align: top;
  text-align: left; }
  .col-1-4:first-child {
    padding-left: 2.1em; }
  @media screen and (max-width: 991px) {
    .col-1-4 {
      width: 24%; } }
  @media screen and (max-width: 767px) {
    .col-1-4 {
      width: 40%; }
      .col-1-4:first-child {
        padding-left: 0; } }
  @media screen and (max-width: 543px) {
    .col-1-4 {
      width: 46%;
      font-size: 13px; } }

/********** Header **********/
.header {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 100;
  background: #c6db5b;
  height: 6.0625em;
  color: #ffffff; }
  @media screen and (max-width: 767px) {
    .header {
      height: 4.5em; } }
  @media screen and (max-width: 543px) {
    .header {
      font-size: 12px; } }
  .header .container {
    height: 100%; }
    .header .container:before {
      content: '';
      display: inline-block;
      vertical-align: middle;
      height: 100%; }
  .header .logo {
    display: inline-block;
    vertical-align: middle;
    width: 7.2em;
    padding-left: 1em; }
  @media screen and (max-width: 767px) {
    .header-menu {
      display: none;
      background: #63d8ff;
      text-align: center;
      border-bottom: 2px solid #ffffff; }
      .header-menu--item {
        display: block;
        border-top: 2px solid #ffffff; }
      .header-menu--link {
        display: block;
        font-size: 1.375em;
        padding: 0.5em 0;
        color: inherit; } }
  @media screen and (min-width: 768px) {
    .header-menu {
      float: right;
      height: 100%;
      padding-top: 1em; }
      .header-menu:before {
        content: '';
        display: inline-block;
        vertical-align: middle;
        height: 100%; }
      .header-menu--item {
        display: inline-block;
        padding: 0.5em 1.5em 0; }
      .header-menu--link {
        color: inherit;
        font-size: 1.375em; }
        .header-menu--link:hover {
          color: #34495e; } }
  .header .menu-toggle--wrap {
    float: right;
    height: 100%;
    padding-right: 1.5em; }
    @media screen and (min-width: 768px) {
      .header .menu-toggle--wrap {
        display: none; } }
    .header .menu-toggle--wrap:before {
      content: '';
      display: inline-block;
      vertical-align: middle;
      height: 100%; }
    .header .menu-toggle--wrap .menu-toggle {
      display: inline-block;
      vertical-align: middle;
      width: 36px;
      height: 22px;
      cursor: pointer; }
      .header .menu-toggle--wrap .menu-toggle .burger {
        position: relative;
        margin-top: 11px;
        margin-bottom: 11px;
        -webkit-user-select: none;
           -moz-user-select: none;
            -ms-user-select: none;
                user-select: none; }
        .header .menu-toggle--wrap .menu-toggle .burger, .header .menu-toggle--wrap .menu-toggle .burger::before, .header .menu-toggle--wrap .menu-toggle .burger::after {
          display: block;
          width: 100%;
          height: 3px;
          background-color: #ffffff;
          transition-property: background-color, transform;
          transition-duration: 0.3s; }
        .header .menu-toggle--wrap .menu-toggle .burger::before, .header .menu-toggle--wrap .menu-toggle .burger::after {
          position: absolute;
          content: ""; }
        .header .menu-toggle--wrap .menu-toggle .burger::before {
          top: -11px; }
        .header .menu-toggle--wrap .menu-toggle .burger::after {
          top: 11px; }
      .header .menu-toggle--wrap .menu-toggle.active .burger {
        background-color: transparent; }
      .header .menu-toggle--wrap .menu-toggle.active .burger::before {
        -ms-transform: translateY(11px) rotate(45deg);
            transform: translateY(11px) rotate(45deg); }
      .header .menu-toggle--wrap .menu-toggle.active .burger::after {
        -ms-transform: translateY(-11px) rotate(-45deg);
            transform: translateY(-11px) rotate(-45deg); }
  .header .person {
    float: right;
    height: 100%;
    padding: 1em 5.4em 0 3.2em; }
    @media screen and (max-width: 767px) {
      .header .person {
        padding: 0 2em 0 1em; } }
    .header .person:before {
      content: '';
      display: inline-block;
      vertical-align: middle;
      height: 100%; }
    .header .person-img {
      width: 3em;
      height: 3em;
      display: inline-block;
      vertical-align: middle;
      border-radius: 50%; }
    .header .person-data {
      display: inline-block;
      vertical-align: middle;
      padding-left: 0.7em; }

.plans-title {
  text-align: center;
  padding: 7.8% 0;
  color: #68727b; }
  .plans-title h1 {
    font-size: 2.5em;
    padding-bottom: 0.45em; }
  .plans-title p {
    font-size: 1.875em;
    font-weight: 300; }

.plans-tab {
  position: relative;
  z-index: 1;
  color: #ffffff; }
  .plans-tab--item {
    position: relative;
    display: inline-block;
    width: 50%;
    padding: 1.5em 0;
    font-size: 1.875em;
    text-align: center;
    cursor: pointer; }
    .plans-tab--item:before {
      content: '';
      position: absolute;
      right: 50%;
      bottom: -0.6em;
      margin-right: -0.65em; }
    @media screen and (max-width: 991px) {
      .plans-tab--item {
        padding: 1.2em 0; } }
    @media screen and (max-width: 767px) {
      .plans-tab--item {
        font-size: 1.2em; } }
    @media screen and (max-width: 419px) {
      .plans-tab--item {
        font-size: 1em; } }
  .plans-tab--parent {
    background-color: #63d8ff; }
    .plans-tab--parent.active:before {
      display: inline-block;
      height: 0;
      width: 0;
      -webkit-transform: rotate(360deg);
      border-width: 0.7em 0.65em;
      border-style: solid;
      border-color: transparent;
      border-top-color: #63d8ff;
      border-bottom-width: 0; }
  .plans-tab--teacher {
    background-color: #34495e; }
    .plans-tab--teacher.active:before {
      display: inline-block;
      height: 0;
      width: 0;
      -webkit-transform: rotate(360deg);
      border-width: 0.7em 0.65em;
      border-style: solid;
      border-color: transparent;
      border-top-color: #34495e;
      border-bottom-width: 0; }

.plans-banner {
  position: relative;
  height: 35.6875em;
  font-family: "Open Sans", sans-serif;
  font-weight: 300;
  padding: 6.2em 0; }
  @media screen and (max-width: 767px) {
    .plans-banner {
      padding: 3em 0; } }
  .plans-content--parent .plans-banner {
    background: url("../img/banner-parent.jpg") no-repeat center;
    background-size: cover; }
    .plans-content--parent .plans-banner .plans-banner--content {
      width: 37em;
      padding-left: 3.1em; }
      @media screen and (max-width: 767px) {
        .plans-content--parent .plans-banner .plans-banner--content {
          background-color: rgba(255, 255, 255, 0.8);
          width: 100%;
          padding: 0.5em 2em; } }
      @media screen and (max-width: 543px) {
        .plans-content--parent .plans-banner .plans-banner--content {
          padding: 0.5em 1em; } }
  .plans-content--teacher .plans-banner {
    background: #e5e1d6 url("../img/banner-teacher.png") no-repeat bottom center; }
    .plans-content--teacher .plans-banner .plans-banner--content {
      padding: 0 10% 0 40%; }
      @media screen and (max-width: 767px) {
        .plans-content--teacher .plans-banner .plans-banner--content {
          width: 100%;
          padding: 0 2em; } }
      @media screen and (max-width: 543px) {
        .plans-content--teacher .plans-banner .plans-banner--content {
          padding: 0 1em; } }
  .plans-banner h2 {
    position: relative;
    padding-bottom: 0.7em;
    margin-bottom: 0.6em; }
    .plans-banner h2:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 2.777em;
      height: 1px;
      background: linear-gradient(to right, #27e4ff 0%, #d4b3fd 100%); }
  .plans-banner p {
    color: #888888;
    line-height: 2;
    font-size: 1.125em; }

.plans-advantages {
  text-align: center;
  padding: 6.6em 0;
  background-color: #63d8ff;
  color: #ffffff; }
  @media screen and (max-width: 767px) {
    .plans-advantages {
      padding: 3em 0 1em; } }
  .plans-content--teacher .plans-advantages {
    background-color: #34495e; }
  .plans-advantages img {
    display: block;
    margin: 0 auto;
    width: 8.125em; }
  .plans-advantages h3 {
    position: relative;
    padding: 1.5em 1em 2.2em;
    margin-bottom: 0.5em;
    font-size: 1.125em;
    font-weight: 900;
    line-height: 1.4;
    letter-spacing: 1px;
    text-transform: uppercase; }
    .plans-advantages h3:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      height: 1px;
      margin-left: -1.94em;
      margin-bottom: 0.5em;
      background-color: #ffffff;
      width: 3.88em; }
  .plans-advantages ul {
    text-align: left; }
    .plans-advantages ul li {
      line-height: 1.4;
      padding-bottom: 1em; }
      .plans-advantages ul li svg {
        display: inline-block;
        vertical-align: middle;
        margin-right: 0.8em;
        font-size: 1.05em;
        fill: #ffffff; }

.plans-table {
  text-align: center;
  padding: 8.8em 0 1em;
  min-height: 71.25em; }
  @media screen and (max-width: 767px) {
    .plans-table {
      padding: 3em 0;
      min-height: auto; } }
  .plans-table h2 {
    font-weight: 300;
    color: #2c3e50;
    padding-bottom: 0.3em; }
  .plans-table p {
    font-size: 0.875em;
    color: #a1b1bc;
    padding: 0 30%;
    line-height: 1.7; }
    @media screen and (max-width: 767px) {
      .plans-table p {
        padding: 0 5%; } }
  .plans-table table {
    width: 100%;
    margin-top: 6.8em;
    color: #686d80; }
    @media screen and (max-width: 767px) {
      .plans-table table {
        font-size: 12px; } }
    @media screen and (max-width: 543px) {
      .plans-table table {
        font-size: 10px; } }
    @media screen and (max-width: 419px) {
      .plans-table table {
        font-size: 8px; } }
    .plans-table table b {
      font-weight: 900;
      font-size: 1.5em; }
    .plans-table table span, .plans-table table a {
      display: block; }
    .plans-table table a {
      width: 6.67em;
      height: 1.67em;
      margin: 0.5em auto 0;
      font-size: 1.125em;
      line-height: 1.67em;
      color: #ffffff;
      background-color: #42d0f9; }
      .plans-table table a:hover {
        -ms-transform: scale(1.1);
            transform: scale(1.1); }
      .plans-table table a span {
        display: block;
        line-height: 1.2;
        padding: 0.3em 0;
        border-top: 1px solid #ffffff; }
      .plans-table table a.discr-blue {
        width: 11.34em; }
        .plans-table table a.discr-blue span {
          background-color: #34495e; }
      .plans-table table a.discr-green {
        width: 13em; }
        .plans-table table a.discr-green span {
          background-color: #167260; }
      @media screen and (max-width: 767px) {
        .plans-table table a {
          width: 100% !important; } }
    .plans-table table th {
      width: 25%; }
      .plans-table table th:nth-child(even) a {
        background-color: #1abc9c; }
    .plans-table table thead th.table-account {
      position: relative;
      padding: 2em 0 1em;
      color: #ffffff;
      background-color: #34495e; }
      .plans-table table thead th.table-account span {
        font-weight: 300;
        padding-top: 0.5em; }
      .plans-table table thead th.table-account--title {
        color: #a1b1bc;
        padding-top: 2em; }
      .plans-table table thead th.table-account--family {
        padding: 0 0 1em; }
        .plans-table table thead th.table-account--family:before {
          content: '';
          position: absolute;
          top: -1.3em;
          right: 0;
          left: 0;
          height: 1.4em;
          background: #34495e; }
    .plans-table table thead th.table-price {
      padding: 0.25em 0;
      font-size: 1.5em;
      font-weight: 300;
      color: #ffffff;
      background: linear-gradient(to right, #1ed1b0 0%, #44d0fd 100%);
      border-bottom: 2px solid #16a085; }
      .plans-table table thead th.table-price--number {
        font-size: 3em;
        line-height: 1; }
        .plans-table table thead th.table-price--number i {
          font-size: 0.6em;
          display: inline-block;
          vertical-align: top;
          padding-top: 0.1em; }
        .plans-table table thead th.table-price--number span {
          font-weight: 700;
          font-size: 0.3em; }
    .plans-table table tbody svg {
      font-size: 1.3em; }
      .plans-table table tbody svg.i-success {
        fill: green; }
      .plans-table table tbody svg.i-delete {
        fill: #ef584d; }
    .plans-table table tbody th {
      padding: 0.5em 0; }
    .plans-table table tbody tr:nth-child(even) {
      background-color: #f4f7f8; }

.sponsor {
  text-align: center;
  padding: 10.6em 0;
  color: #ffffff;
  background: linear-gradient(to right, #1ed1b0 0%, #44d0fd 100%); }
  @media screen and (max-width: 767px) {
    .sponsor {
      padding: 5em 0.2em; } }
  .sponsor h2 {
    font-weight: 700;
    padding-bottom: 0.5em;
    font-size: 1.875em;
    letter-spacing: 3px; }
  .sponsor a {
    display: inline-block;
    padding: 0.7em 1.6em;
    margin-top: 1.8em;
    font-size: 1.5em;
    background-color: #34495e;
    border-radius: 5px; }
    @media screen and (max-width: 767px) {
      .sponsor a {
        font-size: 1.2em; } }

.video {
  position: relative;
  height: 50em; }
  .video-box {
    height: 100%; }
    .video-box iframe {
      display: block;
      height: 100%;
      width: 100%; }
  .video-overlay {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: 15.5em 0 0;
    text-align: center;
    font-weight: 300;
    color: #ffffff;
    background-color: #68727b; }
    .video-overlay a {
      position: relative;
      display: inline-block;
      width: 6.25em;
      height: 6.25em;
      border-radius: 50%;
      background-color: #ffffff;
      margin-bottom: 5.2em; }
      .video-overlay a:before {
        content: '';
        margin-top: 2.5em;
        margin-left: 0.2em;
        display: inline-block;
        height: 0;
        width: 0;
        -webkit-transform: rotate(360deg);
        border-width: 0.75em 1.5em;
        border-style: solid;
        border-color: transparent;
        border-left-color: #68727b;
        border-right-width: 0; }
    .video-overlay h2 {
      position: relative;
      padding-bottom: 1.8em; }
      .video-overlay h2:after {
        content: '';
        position: absolute;
        right: 50%;
        bottom: 0;
        margin-right: -1.3885em;
        width: 2.777em;
        height: 1px;
        background: linear-gradient(to right, #27e4ff 0%, #d4b3fd 100%); }

.testimonials {
  text-align: center;
  padding: 6.3em 0 2em;
  color: #a1b1bc; }
  @media screen and (max-width: 1199px) {
    .testimonials .container {
      padding: 0 1em; } }
  .testimonials h2 {
    padding-bottom: 0.4em;
    color: #2c3e50;
    font-weight: 300; }
  .testimonials p {
    line-height: 1.7; }
  .testimonials h2 + p {
    font-size: 0.875em;
    padding: 0 23%; }
    @media screen and (max-width: 991px) {
      .testimonials h2 + p {
        padding: 0 5%; } }
  .testimonials-wrap {
    padding: 4.3em 0; }
  .testimonials-item {
    width: 100%; }
    .testimonials-item--content {
      position: relative;
      border: 1px solid #e7ebee;
      padding: 2.5em 10% 2.9em; }
      @media screen and (max-width: 767px) {
        .testimonials-item--content {
          padding: 1.5em 1em 1.5em; } }
      .testimonials-item--content:before {
        content: '';
        z-index: 2;
        display: inline-block;
        height: 0;
        width: 0;
        -webkit-transform: rotate(360deg);
        border-width: 9px 13px;
        border-style: solid;
        border-color: transparent;
        border-top-color: #ffffff;
        border-bottom-width: 0;
        position: absolute;
        right: 50%;
        bottom: -8px;
        margin-right: -13px; }
      .testimonials-item--content:after {
        content: '';
        z-index: 1;
        display: inline-block;
        height: 0;
        width: 0;
        -webkit-transform: rotate(360deg);
        border-width: 9px 13px;
        border-style: solid;
        border-color: transparent;
        border-top-color: #e7ebee;
        border-bottom-width: 0;
        position: absolute;
        right: 50%;
        bottom: -9px;
        margin-right: -13px; }
      .testimonials-item--content p {
        font-size: 1.125em; }
    .testimonials-item img {
      display: inline-block;
      margin: 2em 0 0.5em;
      border-radius: 50%;
      border: 5px solid #ffffff;
      box-shadow: 0 0 0 1px #e7ebee; }
    .testimonials-item--name {
      font-weight: 700;
      color: #2c3e50;
      line-height: 2;
      font-size: 1.125em; }
    .testimonials-item--discr {
      font-size: 0.875em; }
  .testimonials .flickity-page-dots {
    bottom: 0; }
    .testimonials .flickity-page-dots .dot {
      width: 12px;
      height: 12px;
      border: 3px solid #ffffff;
      background: transparent;
      box-shadow: 0 0 1px 1px #333333;
      margin: 0 6px; }
      .testimonials .flickity-page-dots .dot.is-selected {
        background: #1abc9c;
        box-shadow: 0 0 1px 0px #333333; }

.about {
  padding: 3em 1em;
  line-height: 1.6; }
  .about h1, .about h2, .about h3 {
    text-align: center;
    color: #68727b; }
  .about h1 {
    font-size: 2.25em; }
  .about h2, .about h3 {
    font-size: 1.5em;
    font-weight: 300; }
  .about p {
    padding-top: 1em; }

.footer {
  padding: 3.8em 0 8.5em;
  background-color: #c6db5b;
  text-align: center;
  color: #ffffff;
  font-family: 'Arial', sans-serif; }
  @media screen and (max-width: 991px) {
    .footer {
      padding: 3em 0 1.5em; } }
  .footer h4 {
    font-size: 1.3125em;
    margin-bottom: 1.6em; }
  .footer .footer-appstore {
    display: block;
    margin-top: -0.3em; }
  .footer form {
    position: relative;
    z-index: 10;
    overflow: hidden;
    width: 10.8125em;
    border-radius: 30px;
    background: #ffffff;
    margin-top: -0.3em; }
    .footer form input {
      display: inline-block;
      height: 2.35em;
      width: 100%;
      padding: 0 2em 0 1em;
      font-size: 1.0625em;
      border: none;
      color: #68727b;
      background: transparent; }
    .footer form button {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      width: 2.2em;
      text-align: center;
      font-size: 1em;
      color: inherit;
      border: none;
      background: #daed79; }
  .footer ul li {
    padding-bottom: 0.85em; }
    .footer ul li a {
      text-decoration: underline;
      font-size: 0.90625em; }
      .footer ul li a:hover {
        text-decoration: none; }

/*# sourceMappingURL=data:application/json;base64, */
